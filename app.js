// EcliptVPN Mini App - –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –±–æ—Ç–∞
console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è EcliptVPN Mini App...');

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
const app = document.getElementById('app');
const overlays = document.getElementById('ui-overlays');
const hasWebApp = Boolean(window.Telegram?.WebApp);

// –î–∞–Ω–Ω—ã–µ –∏–∑ –±–æ—Ç–∞
const appData = {
  user: {
    id: 12345,
    first_name: '–ê–ª–µ–∫—Å–µ–π',
    last_name: '–ü–µ—Ç—Ä–æ–≤',
    username: 'alex_petrov'
  },
  profile: {
    balance: 2500,
    status: 'Premium',
    vpn_count: 3,
    join_date: '2024-01-15',
    total_traffic: '2.5 TB',
    active_connections: 2
  },
  vpns: [
    {
      id: 1,
      plan: 'Premium VPN',
      country: '–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã',
      country_code: 'NL',
      server: 'Amsterdam-01',
      expiry: '2024-12-31',
      status: 'active',
      speed: '1000 Mbps',
      ping: '12ms',
      config: 'vpn://config1.example.com',
      traffic_used: '850 GB',
      traffic_limit: 'Unlimited'
    },
    {
      id: 2,
      plan: 'Standard VPN',
      country: '–°–®–ê',
      country_code: 'US',
      server: 'New York-02',
      expiry: '2024-11-15',
      status: 'active',
      speed: '500 Mbps',
      ping: '45ms',
      config: 'vpn://config2.example.com',
      traffic_used: '1.2 TB',
      traffic_limit: '2 TB'
    },
    {
      id: 3,
      plan: 'Basic VPN',
      country: '–ì–µ—Ä–º–∞–Ω–∏—è',
      country_code: 'DE',
      server: 'Berlin-01',
      expiry: '2024-10-20',
      status: 'expired',
      speed: '100 Mbps',
      ping: '25ms',
      config: 'vpn://config3.example.com',
      traffic_used: '500 GB',
      traffic_limit: '1 TB'
    }
  ],
  servers: [
    { id: 1, country: '–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã', country_code: 'NL', city: '–ê–º—Å—Ç–µ—Ä–¥–∞–º', ping: '12ms', load: 23, price: 299, flag: 'üá≥üá±' },
    { id: 2, country: '–°–®–ê', country_code: 'US', city: '–ù—å—é-–ô–æ—Ä–∫', ping: '45ms', load: 67, price: 399, flag: 'üá∫üá∏' },
    { id: 3, country: '–ì–µ—Ä–º–∞–Ω–∏—è', country_code: 'DE', city: '–ë–µ—Ä–ª–∏–Ω', ping: '25ms', load: 45, price: 299, flag: 'üá©üá™' },
    { id: 4, country: '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è', country_code: 'GB', city: '–õ–æ–Ω–¥–æ–Ω', ping: '18ms', load: 34, price: 349, flag: 'üá¨üáß' },
    { id: 5, country: '–Ø–ø–æ–Ω–∏—è', country_code: 'JP', city: '–¢–æ–∫–∏–æ', ping: '89ms', load: 12, price: 499, flag: 'üáØüáµ' },
    { id: 6, country: '–°–∏–Ω–≥–∞–ø—É—Ä', country_code: 'SG', city: '–°–∏–Ω–≥–∞–ø—É—Ä', ping: '156ms', load: 8, price: 449, flag: 'üá∏üá¨' },
    { id: 7, country: '–ö–∞–Ω–∞–¥–∞', country_code: 'CA', city: '–¢–æ—Ä–æ–Ω—Ç–æ', ping: '78ms', load: 15, price: 399, flag: 'üá®üá¶' },
    { id: 8, country: '–ê–≤—Å—Ç—Ä–∞–ª–∏—è', country_code: 'AU', city: '–°–∏–¥–Ω–µ–π', ping: '234ms', load: 5, price: 599, flag: 'üá¶üá∫' },
    { id: 9, country: '–§—Ä–∞–Ω—Ü–∏—è', country_code: 'FR', city: '–ü–∞—Ä–∏–∂', ping: '15ms', load: 28, price: 329, flag: 'üá´üá∑' },
    { id: 10, country: '–®–≤–µ–π—Ü–∞—Ä–∏—è', country_code: 'CH', city: '–¶—é—Ä–∏—Ö', ping: '20ms', load: 18, price: 379, flag: 'üá®üá≠' }
  ],
  periods: [
    { id: 1, name: '1 –º–µ—Å—è—Ü', duration: 30, discount: 0, multiplier: 1, popular: false },
    { id: 2, name: '3 –º–µ—Å—è—Ü–∞', duration: 90, discount: 10, multiplier: 0.9, popular: true },
    { id: 3, name: '6 –º–µ—Å—è—Ü–µ–≤', duration: 180, discount: 20, multiplier: 0.8, popular: false },
    { id: 4, name: '1 –≥–æ–¥', duration: 365, discount: 30, multiplier: 0.7, popular: true }
  ],
  plans: [
    { id: 1, name: 'Basic', price: 299, duration: '–º–µ—Å—è—Ü', features: ['100 Mbps', '1 —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ', '5 —Å—Ç—Ä–∞–Ω', '1 TB —Ç—Ä–∞—Ñ–∏–∫–∞'] },
    { id: 2, name: 'Standard', price: 599, duration: '–º–µ—Å—è—Ü', features: ['500 Mbps', '3 —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞', '15 —Å—Ç—Ä–∞–Ω', '5 TB —Ç—Ä–∞—Ñ–∏–∫–∞'] },
    { id: 3, name: 'Premium', price: 999, duration: '–º–µ—Å—è—Ü', features: ['1000 Mbps', '5 —É—Å—Ç—Ä–æ–π—Å—Ç–≤', '30 —Å—Ç—Ä–∞–Ω', 'Unlimited —Ç—Ä–∞—Ñ–∏–∫–∞'] }
  ],
  payment_methods: [
    { id: 1, name: '–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞', icon: 'credit-card', available: true },
    { id: 2, name: '–°–ë–ü', icon: 'phone', available: true },
    { id: 3, name: '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥', icon: 'bank', available: true },
    { id: 4, name: '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞', icon: 'bitcoin', available: false }
  ]
};

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let currentScreen = 'welcome';
let currentUser = null;
let selectedServer = null;
let selectedPeriod = null;
let isTransitioning = false;
let purchaseStep = 'country'; // country, period, payment

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
if (hasWebApp) {
  window.Telegram.WebApp.ready();
  window.Telegram.WebApp.expand();
  currentUser = window.Telegram.WebApp.initDataUnsafe?.user || appData.user;
  console.log('‚úÖ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
} else {
  currentUser = appData.user;
  console.log('üîß –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
}

// –£—Ç–∏–ª–∏—Ç—ã
function showToast(message, type = 'info', duration = 3000) {
  const toast = document.createElement('div');
  toast.className = `toast toast-${type}`;
  toast.innerHTML = `
    <div class="toast-content">
      <span class="toast-icon">${type === 'success' ? '‚úÖ' : type === 'error' ? '‚ùå' : '‚ÑπÔ∏è'}</span>
      <span>${message}</span>
    </div>
  `;
  overlays.appendChild(toast);
  
  setTimeout(() => {
    toast.style.opacity = '0';
    setTimeout(() => toast.remove(), 300);
  }, duration);
}

function addClickAnimation(element) {
  element.style.transform = 'scale(0.95)';
  setTimeout(() => {
    element.style.transform = '';
  }, 150);
}

function transitionToScreen(screenName, callback) {
  if (isTransitioning) return;
  isTransitioning = true;
  
  const currentScreenEl = app.querySelector('.screen.active');
  if (currentScreenEl) {
    // –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —ç–∫—Ä–∞–Ω–∞
    currentScreenEl.style.opacity = '0';
    currentScreenEl.style.transform = 'translateX(100%)';
    
    setTimeout(() => {
      currentScreen = screenName;
      callback();
      isTransitioning = false;
    }, 300);
  } else {
    currentScreen = screenName;
    callback();
    isTransitioning = false;
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function initApp() {
  app.innerHTML = `
    <div class="app-container">
      <!-- –≠–∫—Ä–∞–Ω—ã –±—É–¥—É—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è -->
    </div>
  `;
  
  showWelcome();
}

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω
function showWelcome() {
  app.innerHTML = `
    <div class="app-container">
      <div class="screen active welcome-screen">
        <div class="welcome-content">
          <div class="logo-anim">
            <div class="logo-icon">
              <img src="assets/shield.svg" alt="EcliptVPN" class="logo-svg">
            </div>
            <h1 class="brand">EcliptVPN</h1>
            <p class="slogan">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å. –°–≤–æ–±–æ–¥–∞. –ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å.</p>
          </div>
          <button class="main-btn start-btn" onclick="showMainMenu()">
            <img src="assets/shield.svg" alt="–ù–∞—á–∞—Ç—å" class="btn-icon-svg">
            <span>–ù–∞—á–∞—Ç—å</span>
          </button>
        </div>
      </div>
    </div>
  `;
}

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
function showMainMenu() {
  transitionToScreen('main', () => {
    app.innerHTML = `
      <div class="app-container">
        <div class="screen active main-screen">
          <div class="header">
            <h1>EcliptVPN</h1>
          </div>
          
          <div class="welcome-section">
            <div class="welcome-text">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å,</div>
            <div class="user-name">${currentUser.first_name}!</div>
          </div>
          
          <div class="nav-buttons">
            <div class="nav-btn" onclick="showProfile()">
              <img src="assets/profile.svg" alt="–ü—Ä–æ—Ñ–∏–ª—å" class="nav-btn-icon-svg">
              <div class="nav-btn-text">–ü—Ä–æ—Ñ–∏–ª—å</div>
            </div>
            <div class="nav-btn" onclick="showVPNs()">
              <img src="assets/vpn.svg" alt="VPN" class="nav-btn-icon-svg">
              <div class="nav-btn-text">–ú–æ–∏ VPN</div>
            </div>
            <div class="nav-btn" onclick="showServers()">
              <img src="assets/globe.svg" alt="–°–µ—Ä–≤–µ—Ä—ã" class="nav-btn-icon-svg">
              <div class="nav-btn-text">–°–µ—Ä–≤–µ—Ä—ã</div>
            </div>
            <div class="nav-btn" onclick="showTopup()">
              <img src="assets/wallet.svg" alt="–ü–æ–ø–æ–ª–Ω–∏—Ç—å" class="nav-btn-icon-svg">
              <div class="nav-btn-text">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</div>
            </div>
          </div>
          
          <div class="card">
            <h3 style="margin-bottom: 16px; color: var(--primary);">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
            <div class="stats-grid">
              <div class="stat-card">
                <div class="stat-value">${appData.profile.vpn_count}</div>
                <div class="stat-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö VPN</div>
              </div>
              <div class="stat-card">
                <div class="stat-value">‚ÇΩ${appData.profile.balance}</div>
                <div class="stat-label">–ë–∞–ª–∞–Ω—Å</div>
              </div>
              <div class="stat-card">
                <div class="stat-value">${appData.profile.total_traffic}</div>
                <div class="stat-label">–¢—Ä–∞—Ñ–∏–∫</div>
              </div>
              <div class="stat-card">
                <div class="stat-value">${appData.profile.active_connections}</div>
                <div class="stat-label">–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–π</div>
              </div>
            </div>
          </div>
        </div>
        
        <div class="bottom-nav">
          <div class="nav-item active" onclick="showMainMenu()">
            <img src="assets/home.svg" alt="–ì–ª–∞–≤–Ω–∞—è" class="nav-item-icon-svg">
            <div class="nav-item-text">–ì–ª–∞–≤–Ω–∞—è</div>
          </div>
          <div class="nav-item" onclick="showVPNs()">
            <img src="assets/vpn.svg" alt="VPN" class="nav-item-icon-svg">
            <div class="nav-item-text">VPN</div>
          </div>
          <div class="nav-item" onclick="showServers()">
            <img src="assets/globe.svg" alt="–°–µ—Ä–≤–µ—Ä—ã" class="nav-item-icon-svg">
            <div class="nav-item-text">–°–µ—Ä–≤–µ—Ä—ã</div>
          </div>
          <div class="nav-item" onclick="showTopup()">
            <img src="assets/wallet.svg" alt="–ü–æ–ø–æ–ª–Ω–∏—Ç—å" class="nav-item-icon-svg">
            <div class="nav-item-text">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</div>
          </div>
          <div class="nav-item" onclick="showProfile()">
            <img src="assets/profile.svg" alt="–ü—Ä–æ—Ñ–∏–ª—å" class="nav-item-icon-svg">
            <div class="nav-item-text">–ü—Ä–æ—Ñ–∏–ª—å</div>
          </div>
        </div>
      </div>
    `;
    
    updateBottomNav('main');
  });
}

// –ü—Ä–æ—Ñ–∏–ª—å
function showProfile() {
  transitionToScreen('profile', () => {
    app.innerHTML = `
      <div class="app-container">
        <div class="screen active profile-screen">
          <div class="header">
            <div class="back-btn" onclick="showMainMenu()">‚Üê</div>
            <h2>–ü—Ä–æ—Ñ–∏–ª—å</h2>
          </div>
          
          <div class="profile-card">
            <div class="profile-avatar">
              ${currentUser.first_name.charAt(0)}
            </div>
            <div class="profile-info">
              <h3>${currentUser.first_name} ${currentUser.last_name}</h3>
              <p class="profile-id">ID: ${currentUser.id}</p>
              <div class="status-badge">${appData.profile.status}</div>
            </div>
          </div>
          
          <div class="stats-grid">
            <div class="stat-card">
              <div class="stat-value">‚ÇΩ${appData.profile.balance}</div>
              <div class="stat-label">–ë–∞–ª–∞–Ω—Å</div>
            </div>
            <div class="stat-card">
              <div class="stat-value">${appData.profile.vpn_count}</div>
              <div class="stat-label">VPN</div>
            </div>
            <div class="stat-card">
              <div class="stat-value">${appData.profile.total_traffic}</div>
              <div class="stat-label">–¢—Ä–∞—Ñ–∏–∫</div>
            </div>
            <div class="stat-card">
              <div class="stat-value">${appData.profile.active_connections}</div>
              <div class="stat-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö</div>
            </div>
          </div>
          
          <div class="card">
            <h3 style="margin-bottom: 16px; color: var(--primary);">üìà –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h3>
            <div class="detail-row">
              <span class="detail-label">–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</span>
              <span class="detail-value">${appData.profile.join_date}</span>
            </div>
            <div class="detail-row">
              <span class="detail-label">–°—Ç–∞—Ç—É—Å:</span>
              <span class="detail-value">${appData.profile.status}</span>
            </div>
            <div class="detail-row">
              <span class="detail-label">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Ç—Ä–∞—Ñ–∏–∫–∞:</span>
              <span class="detail-value">${appData.profile.total_traffic}</span>
            </div>
            <div class="detail-row">
              <span class="detail-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π:</span>
              <span class="detail-value">${appData.profile.active_connections}</span>
            </div>
          </div>
          
          <div class="card">
            <h3 style="margin-bottom: 16px; color: var(--primary);">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
            <button class="main-btn" onclick="showToast('–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info')">
              <img src="assets/settings.svg" alt="–ù–∞—Å—Ç—Ä–æ–π–∫–∏" class="btn-icon-svg">
              <span>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</span>
            </button>
          </div>
        </div>
        
        <div class="bottom-nav">
          <div class="nav-item" onclick="showMainMenu()">
            <img src="assets/home.svg" alt="–ì–ª–∞–≤–Ω–∞—è" class="nav-item-icon-svg">
            <div class="nav-item-text">–ì–ª–∞–≤–Ω–∞—è</div>
          </div>
          <div class="nav-item" onclick="showVPNs()">
            <img src="assets/vpn.svg" alt="VPN" class="nav-item-icon-svg">
            <div class="nav-item-text">VPN</div>
          </div>
          <div class="nav-item" onclick="showServers()">
            <img src="assets/globe.svg" alt="–°–µ—Ä–≤–µ—Ä—ã" class="nav-item-icon-svg">
            <div class="nav-item-text">–°–µ—Ä–≤–µ—Ä—ã</div>
          </div>
          <div class="nav-item" onclick="showTopup()">
            <img src="assets/wallet.svg" alt="–ü–æ–ø–æ–ª–Ω–∏—Ç—å" class="nav-item-icon-svg">
            <div class="nav-item-text">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</div>
          </div>
          <div class="nav-item active" onclick="showProfile()">
            <img src="assets/profile.svg" alt="–ü—Ä–æ—Ñ–∏–ª—å" class="nav-item-icon-svg">
            <div class="nav-item-text">–ü—Ä–æ—Ñ–∏–ª—å</div>
          </div>
        </div>
      </div>
    `;
    
    updateBottomNav('profile');
  });
}

// –ú–æ–∏ VPN / –ü–æ–∫—É–ø–∫–∞ VPN
function showVPNs() {
  transitionToScreen('vpn', () => {
    if (purchaseStep === 'country') {
      showCountrySelection();
    } else if (purchaseStep === 'period') {
      showPeriodSelection();
    } else if (purchaseStep === 'payment') {
      showPaymentConfirmation();
    } else {
      showMyVPNs();
    }
  });
}

function showMyVPNs() {
  app.innerHTML = `
    <div class="app-container">
      <div class="screen active vpn-screen">
        <div class="header">
          <div class="back-btn" onclick="showMainMenu()">‚Üê</div>
          <h2>–ú–æ–∏ VPN</h2>
        </div>
        
        <div class="vpn-list">
          ${appData.vpns.map(vpn => `
            <div class="vpn-card ${vpn.status}">
              <div class="vpn-header">
                <div class="vpn-icon">
                  <img src="assets/shield.svg" alt="VPN" class="vpn-icon-svg">
                </div>
                <div class="vpn-info">
                  <div class="vpn-plan">${vpn.plan}</div>
                  <div class="vpn-country">${vpn.flag} ${vpn.country}</div>
                </div>
                <div class="vpn-status">${vpn.status === 'active' ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ò—Å—Ç–µ–∫'}</div>
              </div>
              <div class="vpn-details">
                <div class="detail-row">
                  <span class="detail-label">–°–µ—Ä–≤–µ—Ä:</span>
                  <span class="detail-value">${vpn.server}</span>
                </div>
                <div class="detail-row">
                  <span class="detail-label">–°–∫–æ—Ä–æ—Å—Ç—å:</span>
                  <span class="detail-value">${vpn.speed}</span>
                </div>
                <div class="detail-row">
                  <span class="detail-label">–ü–∏–Ω–≥:</span>
                  <span class="detail-value">${vpn.ping}</span>
                </div>
                <div class="detail-row">
                  <span class="detail-label">–¢—Ä–∞—Ñ–∏–∫:</span>
                  <span class="detail-value">${vpn.traffic_used} / ${vpn.traffic_limit}</span>
                </div>
                <div class="detail-row">
                  <span class="detail-label">–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:</span>
                  <span class="detail-value">${vpn.expiry}</span>
                </div>
              </div>
              <button class="main-btn" onclick="copyConfig('${vpn.config}')">
                <img src="assets/credit-card.svg" alt="–ö–æ–Ω—Ñ–∏–≥" class="btn-icon-svg">
                <span>–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥</span>
              </button>
            </div>
          `).join('')}
        </div>
        
        <button class="main-btn purchase-btn" onclick="startVPNPurchase()">
          <img src="assets/wallet.svg" alt="–ö—É–ø–∏—Ç—å" class="btn-icon-svg">
          <span>–ö—É–ø–∏—Ç—å VPN</span>
        </button>
      </div>
      
      <div class="bottom-nav">
        <div class="nav-item" onclick="showMainMenu()">
          <div class="nav-item-icon">üè†</div>
          <div class="nav-item-text">–ì–ª–∞–≤–Ω–∞—è</div>
        </div>
        <div class="nav-item active" onclick="showVPNs()">
          <div class="nav-item-icon">üîí</div>
          <div class="nav-item-text">VPN</div>
        </div>
        <div class="nav-item" onclick="showServers()">
          <div class="nav-item-icon">üåç</div>
          <div class="nav-item-text">–°–µ—Ä–≤–µ—Ä—ã</div>
        </div>
        <div class="nav-item" onclick="showTopup()">
          <div class="nav-item-icon">üí∞</div>
          <div class="nav-item-text">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</div>
        </div>
        <div class="nav-item" onclick="showProfile()">
          <div class="nav-item-icon">üë§</div>
          <div class="nav-item-text">–ü—Ä–æ—Ñ–∏–ª—å</div>
        </div>
      </div>
    </div>
  `;
  
  updateBottomNav('vpn');
}

function showCountrySelection() {
  app.innerHTML = `
    <div class="app-container">
      <div class="screen active vpn-screen">
        <div class="header">
          <div class="back-btn" onclick="resetVPNPurchase()">‚Üê</div>
          <h2>–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É</h2>
        </div>
        
        <div class="card">
          <h3 style="margin-bottom: 16px; color: var(--primary);">üåç –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã</h3>
          <div class="server-list">
            ${appData.servers.map(server => `
              <div class="server-item" onclick="selectCountry(${server.id})">
                <div class="server-info">
                  <div class="server-country">${server.flag} ${server.country}</div>
                  <div class="server-city">${server.city}</div>
                </div>
                <div class="server-stats">
                  <div class="server-ping">${server.ping}</div>
                  <div class="server-load">${server.load}%</div>
                </div>
                <div class="server-price">‚ÇΩ${server.price}/–º–µ—Å</div>
              </div>
            `).join('')}
          </div>
        </div>
      </div>
      
      <div class="bottom-nav">
        <div class="nav-item" onclick="showMainMenu()">
          <div class="nav-item-icon">üè†</div>
          <div class="nav-item-text">–ì–ª–∞–≤–Ω–∞—è</div>
        </div>
        <div class="nav-item active" onclick="showVPNs()">
          <div class="nav-item-icon">üîí</div>
          <div class="nav-item-text">VPN</div>
        </div>
        <div class="nav-item" onclick="showServers()">
          <div class="nav-item-icon">üåç</div>
          <div class="nav-item-text">–°–µ—Ä–≤–µ—Ä—ã</div>
        </div>
        <div class="nav-item" onclick="showTopup()">
          <div class="nav-item-icon">üí∞</div>
          <div class="nav-item-text">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</div>
        </div>
        <div class="nav-item" onclick="showProfile()">
          <div class="nav-item-icon">üë§</div>
          <div class="nav-item-text">–ü—Ä–æ—Ñ–∏–ª—å</div>
        </div>
      </div>
    </div>
  `;
  
  updateBottomNav('vpn');
}

function showPeriodSelection() {
  const totalPrice = Math.round(selectedServer.price * selectedPeriod.multiplier);
  const discount = selectedPeriod.discount;
  
  app.innerHTML = `
    <div class="app-container">
      <div class="screen active vpn-screen">
        <div class="header">
          <div class="back-btn" onclick="backToCountrySelection()">‚Üê</div>
          <h2>–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥</h2>
        </div>
        
        <div class="card">
          <h3 style="margin-bottom: 16px; color: var(--primary);">üìÖ –ü–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏</h3>
          <div class="selected-server-info">
            <div class="server-country">${selectedServer.country}</div>
            <div class="server-city">${selectedServer.city} ‚Ä¢ ${selectedServer.ping}</div>
          </div>
        </div>
        
        <div class="periods-list">
          ${appData.periods.map(period => {
            const price = Math.round(selectedServer.price * period.multiplier);
            const originalPrice = selectedServer.price;
            const isSelected = selectedPeriod?.id === period.id;
            
            return `
              <div class="period-card ${isSelected ? 'selected' : ''}" onclick="selectPeriod(${period.id})">
                <div class="period-info">
                  <div class="period-name">${period.name}</div>
                  <div class="period-duration">${period.duration} –¥–Ω–µ–π</div>
                </div>
                <div class="period-price">
                  <div class="price-current">‚ÇΩ${price}</div>
                  ${period.discount > 0 ? `<div class="price-original">‚ÇΩ${originalPrice}</div>` : ''}
                </div>
                ${period.popular ? `<div class="popular-badge">–ü–æ–ø—É–ª—è—Ä–Ω—ã–π</div>` : ''}
                ${period.discount > 0 ? `<div class="discount-badge">-${period.discount}%</div>` : ''}
              </div>
            `;
          }).join('')}
        </div>
        
        ${selectedPeriod ? `
          <div class="card">
            <h3 style="margin-bottom: 16px; color: var(--primary);">üí∞ –ò—Ç–æ–≥–æ</h3>
            <div class="purchase-summary">
              <div class="summary-row">
                <span>–°–µ—Ä–≤–µ—Ä:</span>
                <span>${selectedServer.country} - ${selectedServer.city}</span>
              </div>
              <div class="summary-row">
                <span>–ü–µ—Ä–∏–æ–¥:</span>
                <span>${selectedPeriod.name}</span>
              </div>
              <div class="summary-row">
                <span>–¶–µ–Ω–∞ –∑–∞ –º–µ—Å—è—Ü:</span>
                <span>‚ÇΩ${selectedServer.price}</span>
              </div>
              ${discount > 0 ? `
                <div class="summary-row discount">
                  <span>–°–∫–∏–¥–∫–∞ ${discount}%:</span>
                  <span>-‚ÇΩ${Math.round(selectedServer.price * (1 - selectedPeriod.multiplier))}</span>
                </div>
              ` : ''}
              <div class="summary-row total">
                <span>–ö –æ–ø–ª–∞—Ç–µ:</span>
                <span>‚ÇΩ${totalPrice}</span>
              </div>
            </div>
          </div>
        ` : ''}
      </div>
      
      <div class="bottom-nav">
        <div class="nav-item" onclick="showMainMenu()">
          <div class="nav-item-icon">üè†</div>
          <div class="nav-item-text">–ì–ª–∞–≤–Ω–∞—è</div>
        </div>
        <div class="nav-item active" onclick="showVPNs()">
          <div class="nav-item-icon">üîí</div>
          <div class="nav-item-text">VPN</div>
        </div>
        <div class="nav-item" onclick="showServers()">
          <div class="nav-item-icon">üåç</div>
          <div class="nav-item-text">–°–µ—Ä–≤–µ—Ä—ã</div>
        </div>
        <div class="nav-item" onclick="showTopup()">
          <div class="nav-item-icon">üí∞</div>
          <div class="nav-item-text">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</div>
        </div>
        <div class="nav-item" onclick="showProfile()">
          <div class="nav-item-icon">üë§</div>
          <div class="nav-item-text">–ü—Ä–æ—Ñ–∏–ª—å</div>
        </div>
      </div>
    </div>
  `;
  
  updateBottomNav('vpn');
}

function showPaymentConfirmation() {
  const totalPrice = Math.round(selectedServer.price * selectedPeriod.multiplier);
  
  app.innerHTML = `
    <div class="app-container">
      <div class="screen active vpn-screen">
        <div class="header">
          <div class="back-btn" onclick="backToPeriodSelection()">‚Üê</div>
          <h2>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</h2>
        </div>
        
        <div class="card">
          <h3 style="margin-bottom: 16px; color: var(--primary);">üí≥ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏</h3>
          <div class="purchase-details">
            <div class="purchase-item">
              <div class="purchase-label">–°–µ—Ä–≤–µ—Ä:</div>
              <div class="purchase-value">${selectedServer.country} - ${selectedServer.city}</div>
            </div>
            <div class="purchase-item">
              <div class="purchase-label">–ü–µ—Ä–∏–æ–¥:</div>
              <div class="purchase-value">${selectedPeriod.name}</div>
            </div>
            <div class="purchase-item">
              <div class="purchase-label">–°—Ç–æ–∏–º–æ—Å—Ç—å:</div>
              <div class="purchase-value">‚ÇΩ${totalPrice}</div>
            </div>
            <div class="purchase-item">
              <div class="purchase-label">–í–∞—à –±–∞–ª–∞–Ω—Å:</div>
              <div class="purchase-value">‚ÇΩ${appData.profile.balance}</div>
            </div>
          </div>
        </div>
        
        <div class="card">
          <h3 style="margin-bottom: 16px; color: var(--primary);">üí∞ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</h3>
          <div class="payment-options">
            <div class="payment-option selected">
              <div class="payment-icon">üí∞</div>
              <div class="payment-name">–°–ø–∏—Å–∞—Ç—å —Å –±–∞–ª–∞–Ω—Å–∞</div>
              <div class="payment-amount">‚ÇΩ${totalPrice}</div>
            </div>
          </div>
        </div>
        
        <button class="main-btn purchase-btn" onclick="confirmPurchase()" ${totalPrice > appData.profile.balance ? 'disabled' : ''}>
          <img src="assets/credit-card.svg" alt="–û–ø–ª–∞—Ç–∞" class="btn-icon-svg">
          <span>${totalPrice > appData.profile.balance ? '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤' : '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É'}</span>
        </button>
        
        ${totalPrice > appData.profile.balance ? `
          <button class="main-btn secondary-btn" onclick="showTopup()">
            <img src="assets/wallet.svg" alt="–ü–æ–ø–æ–ª–Ω–∏—Ç—å" class="btn-icon-svg">
            <span>–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å</span>
          </button>
        ` : ''}
      </div>
      
      <div class="bottom-nav">
        <div class="nav-item" onclick="showMainMenu()">
          <div class="nav-item-icon">üè†</div>
          <div class="nav-item-text">–ì–ª–∞–≤–Ω–∞—è</div>
        </div>
        <div class="nav-item active" onclick="showVPNs()">
          <div class="nav-item-icon">üîí</div>
          <div class="nav-item-text">VPN</div>
        </div>
        <div class="nav-item" onclick="showServers()">
          <div class="nav-item-icon">üåç</div>
          <div class="nav-item-text">–°–µ—Ä–≤–µ—Ä—ã</div>
        </div>
        <div class="nav-item" onclick="showTopup()">
          <div class="nav-item-icon">üí∞</div>
          <div class="nav-item-text">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</div>
        </div>
        <div class="nav-item" onclick="showProfile()">
          <div class="nav-item-icon">üë§</div>
          <div class="nav-item-text">–ü—Ä–æ—Ñ–∏–ª—å</div>
        </div>
      </div>
    </div>
  `;
  
  updateBottomNav('vpn');
}

// –°–µ—Ä–≤–µ—Ä—ã
function showServers() {
  transitionToScreen('servers', () => {
    app.innerHTML = `
      <div class="app-container">
        <div class="screen active servers-screen">
          <div class="header">
            <div class="back-btn" onclick="showMainMenu()">‚Üê</div>
            <h2>–°–µ—Ä–≤–µ—Ä—ã</h2>
          </div>
          
          <div class="card">
            <h3 style="margin-bottom: 16px; color: var(--primary);">üåç –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä</h3>
          <div class="server-list">
            ${appData.servers.map(server => `
              <div class="server-item ${selectedServer?.id === server.id ? 'selected' : ''}" 
                   onclick="selectServer(${server.id})">
                <div class="server-info">
                  <div class="server-country">${server.flag} ${server.country}</div>
                  <div class="server-city">${server.city}</div>
                </div>
                <div class="server-stats">
                  <div class="server-ping">${server.ping}</div>
                  <div class="server-load">${server.load}%</div>
                </div>
                <div class="server-price">‚ÇΩ${server.price}/–º–µ—Å</div>
                <div class="server-status">
                  ${selectedServer?.id === server.id ? '‚úÖ' : '‚ö™'}
                </div>
              </div>
            `).join('')}
          </div>
          </div>
          
          ${selectedServer ? `
            <div class="card">
              <h3 style="margin-bottom: 16px; color: var(--primary);">üöÄ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ</h3>
              <div class="connection-info">
                <div class="detail-row">
                  <span class="detail-label">–í—ã–±—Ä–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä:</span>
                  <span class="detail-value">${selectedServer.country} - ${selectedServer.city}</span>
                </div>
                <div class="detail-row">
                  <span class="detail-label">–ü–∏–Ω–≥:</span>
                  <span class="detail-value">${selectedServer.ping}</span>
                </div>
                <div class="detail-row">
                  <span class="detail-label">–ù–∞–≥—Ä—É–∑–∫–∞:</span>
                  <span class="detail-value">${selectedServer.load}%</span>
                </div>
              </div>
              <button class="main-btn" onclick="connectToServer()">
                <span class="btn-icon">üîó</span>
                <span>–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è</span>
              </button>
            </div>
          ` : ''}
        </div>
        
        <div class="bottom-nav">
          <div class="nav-item" onclick="showMainMenu()">
            <div class="nav-item-icon">üè†</div>
            <div class="nav-item-text">–ì–ª–∞–≤–Ω–∞—è</div>
          </div>
          <div class="nav-item" onclick="showVPNs()">
            <div class="nav-item-icon">üîí</div>
            <div class="nav-item-text">VPN</div>
          </div>
          <div class="nav-item active" onclick="showServers()">
            <div class="nav-item-icon">üåç</div>
            <div class="nav-item-text">–°–µ—Ä–≤–µ—Ä—ã</div>
          </div>
          <div class="nav-item" onclick="showTopup()">
            <div class="nav-item-icon">üí∞</div>
            <div class="nav-item-text">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</div>
          </div>
          <div class="nav-item" onclick="showProfile()">
            <div class="nav-item-icon">üë§</div>
            <div class="nav-item-text">–ü—Ä–æ—Ñ–∏–ª—å</div>
          </div>
        </div>
      </div>
    `;
    
    updateBottomNav('servers');
  });
}

// –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
function showTopup() {
  transitionToScreen('topup', () => {
    app.innerHTML = `
      <div class="app-container">
        <div class="screen active topup-screen">
          <div class="header">
            <div class="back-btn" onclick="showMainMenu()">‚Üê</div>
            <h2>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ</h2>
          </div>
          
          <div class="card">
            <div class="balance-display">
              <div class="balance-icon">
                <img src="assets/wallet.svg" alt="–ë–∞–ª–∞–Ω—Å" class="balance-icon-svg">
              </div>
              <div class="balance-info">
                <h3>–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å</h3>
                <div class="balance-amount">‚ÇΩ${appData.profile.balance}</div>
              </div>
            </div>
          </div>
          
          <div class="card">
            <h3 style="margin-bottom: 16px; color: var(--primary);">üí≥ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è</h3>
            <div class="quick-amounts">
              <button class="amount-btn" onclick="selectAmount(100)">‚ÇΩ100</button>
              <button class="amount-btn" onclick="selectAmount(500)">‚ÇΩ500</button>
              <button class="amount-btn" onclick="selectAmount(1000)">‚ÇΩ1000</button>
              <button class="amount-btn" onclick="selectAmount(2000)">‚ÇΩ2000</button>
            </div>
            
            <div class="form-group">
              <label class="form-label">–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Å—É–º–º—É:</label>
              <input type="number" id="customAmount" class="form-input" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É" min="10" max="50000">
            </div>
            
            <button class="main-btn" onclick="processPayment()" style="width: 100%; margin-top: 16px;">
              <span class="btn-icon">üí≥</span>
              <span>–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å</span>
            </button>
          </div>
          
          <div class="card">
            <h3 style="margin-bottom: 16px; color: var(--primary);">üí° –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã</h3>
            <div class="payment-methods">
              <div class="payment-method">
                <div class="payment-icon">üí≥</div>
                <div class="payment-name">–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</div>
              </div>
              <div class="payment-method">
                <div class="payment-icon">üì±</div>
                <div class="payment-name">–°–ë–ü</div>
              </div>
              <div class="payment-method">
                <div class="payment-icon">üè¶</div>
                <div class="payment-name">–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥</div>
              </div>
            </div>
          </div>
        </div>
        
        <div class="bottom-nav">
          <div class="nav-item" onclick="showMainMenu()">
            <div class="nav-item-icon">üè†</div>
            <div class="nav-item-text">–ì–ª–∞–≤–Ω–∞—è</div>
          </div>
          <div class="nav-item" onclick="showVPNs()">
            <div class="nav-item-icon">üîí</div>
            <div class="nav-item-text">VPN</div>
          </div>
          <div class="nav-item" onclick="showServers()">
            <div class="nav-item-icon">üåç</div>
            <div class="nav-item-text">–°–µ—Ä–≤–µ—Ä—ã</div>
          </div>
          <div class="nav-item active" onclick="showTopup()">
            <div class="nav-item-icon">üí∞</div>
            <div class="nav-item-text">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</div>
          </div>
          <div class="nav-item" onclick="showProfile()">
            <div class="nav-item-icon">üë§</div>
            <div class="nav-item-text">–ü—Ä–æ—Ñ–∏–ª—å</div>
          </div>
        </div>
      </div>
    `;
    
    updateBottomNav('topup');
  });
}

// –§—É–Ω–∫—Ü–∏–∏ –ø–æ–∫—É–ø–∫–∏ VPN
function startVPNPurchase() {
  purchaseStep = 'country';
  selectedServer = null;
  selectedPeriod = null;
  showVPNs();
}

function selectCountry(serverId) {
  selectedServer = appData.servers.find(s => s.id === serverId);
  purchaseStep = 'period';
  showVPNs();
  showToast(`–í—ã–±—Ä–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∞: ${selectedServer.country}`, 'success');
}

function selectPeriod(periodId) {
  selectedPeriod = appData.periods.find(p => p.id === periodId);
  purchaseStep = 'payment';
  showVPNs();
  showToast(`–í—ã–±—Ä–∞–Ω –ø–µ—Ä–∏–æ–¥: ${selectedPeriod.name}`, 'success');
}

function backToCountrySelection() {
  purchaseStep = 'country';
  selectedServer = null;
  selectedPeriod = null;
  showVPNs();
}

function backToPeriodSelection() {
  purchaseStep = 'period';
  selectedPeriod = null;
  showVPNs();
}

function resetVPNPurchase() {
  purchaseStep = 'country';
  selectedServer = null;
  selectedPeriod = null;
  showMyVPNs();
}

function confirmPurchase() {
  const totalPrice = Math.round(selectedServer.price * selectedPeriod.multiplier);
  
  if (totalPrice > appData.profile.balance) {
    showToast('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ', 'error');
    return;
  }
  
  showToast('–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏...', 'info');
  
  setTimeout(() => {
    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞
    appData.profile.balance -= totalPrice;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π VPN
    const newVPN = {
      id: appData.vpns.length + 1,
      plan: 'Premium VPN',
      country: selectedServer.country,
      country_code: selectedServer.country_code,
      flag: selectedServer.flag,
      server: selectedServer.city + '-01',
      expiry: new Date(Date.now() + selectedPeriod.duration * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
      status: 'active',
      speed: '1000 Mbps',
      ping: selectedServer.ping,
      config: `vpn://config${appData.vpns.length + 1}.example.com`,
      traffic_used: '0 GB',
      traffic_limit: 'Unlimited'
    };
    
    appData.vpns.push(newVPN);
    appData.profile.vpn_count = appData.vpns.filter(v => v.status === 'active').length;
    appData.profile.active_connections = appData.vpns.filter(v => v.status === 'active').length;
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–∫—É–ø–∫—É
    purchaseStep = 'country';
    selectedServer = null;
    selectedPeriod = null;
    
    showToast(`VPN —É—Å–ø–µ—à–Ω–æ –∫—É–ø–ª–µ–Ω! –ë–∞–ª–∞–Ω—Å: ‚ÇΩ${appData.profile.balance}`, 'success');
    showMyVPNs();
  }, 2000);
}

// –§—É–Ω–∫—Ü–∏–∏
function selectServer(serverId) {
  selectedServer = appData.servers.find(s => s.id === serverId);
  showServers();
  showToast(`–í—ã–±—Ä–∞–Ω —Å–µ—Ä–≤–µ—Ä: ${selectedServer.country}`, 'success');
}

function connectToServer() {
  if (!selectedServer) {
    showToast('–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä', 'error');
    return;
  }
  
  showToast('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...', 'info');
  
  setTimeout(() => {
    showToast(`–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ ${selectedServer.country}!`, 'success');
  }, 2000);
}

function selectAmount(amount) {
  // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
  document.querySelectorAll('.amount-btn').forEach(btn => {
    btn.classList.remove('active');
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–µ
  event.target.classList.add('active');
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
  const customAmountInput = document.getElementById('customAmount');
  if (customAmountInput) {
    customAmountInput.value = amount;
  }
  
  showToast(`–í—ã–±—Ä–∞–Ω–∞ —Å—É–º–º–∞: ‚ÇΩ${amount}`, 'info');
}

function processPayment() {
  const customAmountInput = document.getElementById('customAmount');
  const amount = customAmountInput ? customAmountInput.value : 0;
  
  if (!amount || amount < 10) {
    showToast('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –æ—Ç 10 —Ä—É–±–ª–µ–π', 'error');
    return;
  }
  
  showToast('–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞...', 'info');
  
  setTimeout(() => {
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
    appData.profile.balance += parseInt(amount);
    showToast(`–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ‚ÇΩ${amount}!`, 'success');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ
    if (currentScreen === 'main') {
      showMainMenu();
    }
  }, 2000);
}

function copyConfig(config) {
  navigator.clipboard.writeText(config).then(() => {
    showToast('–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!', 'success');
  }).catch(() => {
    showToast('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è', 'error');
  });
}

function updateBottomNav(activeItem) {
  document.querySelectorAll('.nav-item').forEach(item => {
    item.classList.remove('active');
  });
  
  const activeNavItem = document.querySelector(`[onclick*="${activeItem}"]`);
  if (activeNavItem) {
    activeNavItem.classList.add('active');
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
  console.log('üì± DOM –∑–∞–≥—Ä—É–∂–µ–Ω');
  initApp();
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.showMainMenu = showMainMenu;
window.showProfile = showProfile;
window.showVPNs = showVPNs;
window.showServers = showServers;
window.showTopup = showTopup;
window.selectServer = selectServer;
window.connectToServer = connectToServer;
window.selectAmount = selectAmount;
window.processPayment = processPayment;
window.copyConfig = copyConfig;
window.startVPNPurchase = startVPNPurchase;
window.selectCountry = selectCountry;
window.selectPeriod = selectPeriod;
window.backToCountrySelection = backToCountrySelection;
window.backToPeriodSelection = backToPeriodSelection;
window.resetVPNPurchase = resetVPNPurchase;
window.confirmPurchase = confirmPurchase;

console.log('‚úÖ EcliptVPN Mini App –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');