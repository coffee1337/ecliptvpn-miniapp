// EcliptVPN Mini App - –ï–¥–∏–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –ø–ª–∞–≤–Ω—ã–º–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏
console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è EcliptVPN Mini App...');

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
const app = document.getElementById('app');
const overlays = document.getElementById('ui-overlays');
const hasWebApp = Boolean(window.Telegram?.WebApp);

// –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const mockData = {
  user: {
    id: 12345,
    first_name: '–ê–ª–µ–∫—Å–µ–π',
    last_name: '–ü–µ—Ç—Ä–æ–≤',
    username: 'alex_petrov'
  },
  profile: {
    balance: 2500,
    status: 'Premium',
    vpn_count: 3,
    join_date: '2024-01-15'
  },
  vpns: [
    {
      id: 1,
      plan: 'Premium VPN',
      country: 'üá≥üá± –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã',
      server: 'Amsterdam-01',
      expiry: '2024-12-31',
      status: 'active',
      speed: '1000 Mbps',
      ping: '12ms',
      config: 'vpn://config1.example.com'
    },
    {
      id: 2,
      plan: 'Standard VPN',
      country: 'üá∫üá∏ –°–®–ê',
      server: 'New York-02',
      expiry: '2024-11-15',
      status: 'active',
      speed: '500 Mbps',
      ping: '45ms',
      config: 'vpn://config2.example.com'
    },
    {
      id: 3,
      plan: 'Basic VPN',
      country: 'üá©üá™ –ì–µ—Ä–º–∞–Ω–∏—è',
      server: 'Berlin-01',
      expiry: '2024-10-20',
      status: 'expired',
      speed: '100 Mbps',
      ping: '25ms',
      config: 'vpn://config3.example.com'
    }
  ],
  servers: [
    { id: 1, country: 'üá≥üá± –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã', city: '–ê–º—Å—Ç–µ—Ä–¥–∞–º', ping: '12ms', load: 23 },
    { id: 2, country: 'üá∫üá∏ –°–®–ê', city: '–ù—å—é-–ô–æ—Ä–∫', ping: '45ms', load: 67 },
    { id: 3, country: 'üá©üá™ –ì–µ—Ä–º–∞–Ω–∏—è', city: '–ë–µ—Ä–ª–∏–Ω', ping: '25ms', load: 45 },
    { id: 4, country: 'üá¨üáß –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è', city: '–õ–æ–Ω–¥–æ–Ω', ping: '18ms', load: 34 },
    { id: 5, country: 'üáØüáµ –Ø–ø–æ–Ω–∏—è', city: '–¢–æ–∫–∏–æ', ping: '89ms', load: 12 },
    { id: 6, country: 'üá∏üá¨ –°–∏–Ω–≥–∞–ø—É—Ä', city: '–°–∏–Ω–≥–∞–ø—É—Ä', ping: '156ms', load: 8 }
  ],
  plans: [
    { id: 1, name: 'Basic', price: 299, duration: '–º–µ—Å—è—Ü', features: ['100 Mbps', '1 —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ', '5 —Å—Ç—Ä–∞–Ω'] },
    { id: 2, name: 'Standard', price: 599, duration: '–º–µ—Å—è—Ü', features: ['500 Mbps', '3 —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞', '15 —Å—Ç—Ä–∞–Ω'] },
    { id: 3, name: 'Premium', price: 999, duration: '–º–µ—Å—è—Ü', features: ['1000 Mbps', '5 —É—Å—Ç—Ä–æ–π—Å—Ç–≤', '30 —Å—Ç—Ä–∞–Ω'] }
  ]
};

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let currentScreen = 'welcome';
let currentUser = null;
let selectedServer = null;
let isTransitioning = false;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
if (hasWebApp) {
  window.Telegram.WebApp.ready();
  window.Telegram.WebApp.expand();
  currentUser = window.Telegram.WebApp.initDataUnsafe?.user || mockData.user;
  console.log('‚úÖ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
} else {
  currentUser = mockData.user;
  console.log('üîß –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
}

// –£—Ç–∏–ª–∏—Ç—ã
function showToast(message, type = 'info', duration = 3000) {
  const toast = document.createElement('div');
  toast.className = `toast toast-${type}`;
  toast.innerHTML = `
    <div class="toast-content">
      <span class="toast-icon">${type === 'success' ? '‚úÖ' : type === 'error' ? '‚ùå' : '‚ÑπÔ∏è'}</span>
      <span>${message}</span>
    </div>
  `;
  overlays.appendChild(toast);
  
  setTimeout(() => {
    toast.style.opacity = '0';
    setTimeout(() => toast.remove(), 300);
  }, duration);
}

function addClickAnimation(element) {
  element.style.transform = 'scale(0.95)';
  setTimeout(() => {
    element.style.transform = '';
  }, 150);
}

function transitionToScreen(screenName, callback) {
  if (isTransitioning) return;
  isTransitioning = true;
  
  const currentScreenEl = app.querySelector('.screen.active');
  if (currentScreenEl) {
    // –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —ç–∫—Ä–∞–Ω–∞
    currentScreenEl.style.opacity = '0';
    currentScreenEl.style.transform = 'translateX(100%)';
    
    setTimeout(() => {
      currentScreen = screenName;
      callback();
      isTransitioning = false;
    }, 300);
  } else {
    currentScreen = screenName;
    callback();
    isTransitioning = false;
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function initApp() {
  app.innerHTML = `
    <div class="app-container">
      <!-- –≠–∫—Ä–∞–Ω—ã –±—É–¥—É—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è -->
    </div>
  `;
  
  showWelcome();
}

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω
function showWelcome() {
  app.innerHTML = `
    <div class="app-container">
      <div class="screen active welcome-screen">
        <div class="welcome-content">
          <div class="logo-anim">
            <div class="logo-icon">üîí</div>
            <h1 class="brand">EcliptVPN</h1>
            <p class="slogan">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å. –°–≤–æ–±–æ–¥–∞. –ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å.</p>
          </div>
          <button class="main-btn start-btn" onclick="showMainMenu()">
            <span class="btn-icon">üöÄ</span>
            <span>–ù–∞—á–∞—Ç—å</span>
          </button>
        </div>
      </div>
    </div>
  `;
}

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
function showMainMenu() {
  transitionToScreen('main', () => {
    app.innerHTML = `
      <div class="app-container">
        <div class="screen active main-screen">
          <div class="header">
            <h1>EcliptVPN</h1>
          </div>
          
          <div class="welcome-section">
            <div class="welcome-text">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å,</div>
            <div class="user-name">${currentUser.first_name}!</div>
          </div>
          
          <div class="nav-buttons">
            <div class="nav-btn" onclick="showProfile()">
              <div class="nav-btn-icon">üë§</div>
              <div class="nav-btn-text">–ü—Ä–æ—Ñ–∏–ª—å</div>
            </div>
            <div class="nav-btn" onclick="showVPNs()">
              <div class="nav-btn-icon">üîí</div>
              <div class="nav-btn-text">–ú–æ–∏ VPN</div>
            </div>
            <div class="nav-btn" onclick="showServers()">
              <div class="nav-btn-icon">üåç</div>
              <div class="nav-btn-text">–°–µ—Ä–≤–µ—Ä—ã</div>
            </div>
            <div class="nav-btn" onclick="showTopup()">
              <div class="nav-btn-icon">üí∞</div>
              <div class="nav-btn-text">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</div>
            </div>
          </div>
          
          <div class="card">
            <h3 style="margin-bottom: 16px; color: var(--primary);">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
            <div class="stats-grid">
              <div class="stat-card">
                <div class="stat-value">${mockData.profile.vpn_count}</div>
                <div class="stat-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö VPN</div>
              </div>
              <div class="stat-card">
                <div class="stat-value">‚ÇΩ${mockData.profile.balance}</div>
                <div class="stat-label">–ë–∞–ª–∞–Ω—Å</div>
              </div>
            </div>
          </div>
        </div>
        
        <div class="bottom-nav">
          <div class="nav-item active" onclick="showMainMenu()">
            <div class="nav-item-icon">üè†</div>
            <div class="nav-item-text">–ì–ª–∞–≤–Ω–∞—è</div>
          </div>
          <div class="nav-item" onclick="showVPNs()">
            <div class="nav-item-icon">üîí</div>
            <div class="nav-item-text">VPN</div>
          </div>
          <div class="nav-item" onclick="showServers()">
            <div class="nav-item-icon">üåç</div>
            <div class="nav-item-text">–°–µ—Ä–≤–µ—Ä—ã</div>
          </div>
          <div class="nav-item" onclick="showTopup()">
            <div class="nav-item-icon">üí∞</div>
            <div class="nav-item-text">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</div>
          </div>
          <div class="nav-item" onclick="showProfile()">
            <div class="nav-item-icon">üë§</div>
            <div class="nav-item-text">–ü—Ä–æ—Ñ–∏–ª—å</div>
          </div>
        </div>
      </div>
    `;
    
    updateBottomNav('main');
  });
}

// –ü—Ä–æ—Ñ–∏–ª—å
function showProfile() {
  transitionToScreen('profile', () => {
    app.innerHTML = `
      <div class="app-container">
        <div class="screen active profile-screen">
          <div class="header">
            <div class="back-btn" onclick="showMainMenu()">‚Üê</div>
            <h2>–ü—Ä–æ—Ñ–∏–ª—å</h2>
          </div>
          
          <div class="profile-card">
            <div class="profile-avatar">
              ${currentUser.first_name.charAt(0)}
            </div>
            <div class="profile-info">
              <h3>${currentUser.first_name} ${currentUser.last_name}</h3>
              <p class="profile-id">ID: ${currentUser.id}</p>
              <div class="status-badge">${mockData.profile.status}</div>
            </div>
          </div>
          
          <div class="stats-grid">
            <div class="stat-card">
              <div class="stat-value">‚ÇΩ${mockData.profile.balance}</div>
              <div class="stat-label">–ë–∞–ª–∞–Ω—Å</div>
            </div>
            <div class="stat-card">
              <div class="stat-value">${mockData.profile.vpn_count}</div>
              <div class="stat-label">VPN</div>
            </div>
          </div>
          
          <div class="card">
            <h3 style="margin-bottom: 16px; color: var(--primary);">üìà –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h3>
            <div class="detail-row">
              <span class="detail-label">–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</span>
              <span class="detail-value">${mockData.profile.join_date}</span>
            </div>
            <div class="detail-row">
              <span class="detail-label">–°—Ç–∞—Ç—É—Å:</span>
              <span class="detail-value">${mockData.profile.status}</span>
            </div>
          </div>
          
          <div class="card">
            <h3 style="margin-bottom: 16px; color: var(--primary);">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
            <button class="main-btn" onclick="showToast('–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info')">
              <span class="btn-icon">‚öôÔ∏è</span>
              <span>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</span>
            </button>
          </div>
        </div>
        
        <div class="bottom-nav">
          <div class="nav-item" onclick="showMainMenu()">
            <div class="nav-item-icon">üè†</div>
            <div class="nav-item-text">–ì–ª–∞–≤–Ω–∞—è</div>
          </div>
          <div class="nav-item" onclick="showVPNs()">
            <div class="nav-item-icon">üîí</div>
            <div class="nav-item-text">VPN</div>
          </div>
          <div class="nav-item" onclick="showServers()">
            <div class="nav-item-icon">üåç</div>
            <div class="nav-item-text">–°–µ—Ä–≤–µ—Ä—ã</div>
          </div>
          <div class="nav-item" onclick="showTopup()">
            <div class="nav-item-icon">üí∞</div>
            <div class="nav-item-text">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</div>
          </div>
          <div class="nav-item active" onclick="showProfile()">
            <div class="nav-item-icon">üë§</div>
            <div class="nav-item-text">–ü—Ä–æ—Ñ–∏–ª—å</div>
          </div>
        </div>
      </div>
    `;
    
    updateBottomNav('profile');
  });
}

// –ú–æ–∏ VPN
function showVPNs() {
  transitionToScreen('vpn', () => {
    app.innerHTML = `
      <div class="app-container">
        <div class="screen active vpn-screen">
          <div class="header">
            <div class="back-btn" onclick="showMainMenu()">‚Üê</div>
            <h2>–ú–æ–∏ VPN</h2>
          </div>
          
          <div class="vpn-list">
            ${mockData.vpns.map(vpn => `
              <div class="vpn-card ${vpn.status}">
                <div class="vpn-header">
                  <div class="vpn-icon">üîí</div>
                  <div class="vpn-info">
                    <div class="vpn-plan">${vpn.plan}</div>
                    <div class="vpn-country">${vpn.country}</div>
                  </div>
                  <div class="vpn-status">${vpn.status === 'active' ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ò—Å—Ç–µ–∫'}</div>
                </div>
                <div class="vpn-details">
                  <div class="detail-row">
                    <span class="detail-label">–°–µ—Ä–≤–µ—Ä:</span>
                    <span class="detail-value">${vpn.server}</span>
                  </div>
                  <div class="detail-row">
                    <span class="detail-label">–°–∫–æ—Ä–æ—Å—Ç—å:</span>
                    <span class="detail-value">${vpn.speed}</span>
                  </div>
                  <div class="detail-row">
                    <span class="detail-label">–ü–∏–Ω–≥:</span>
                    <span class="detail-value">${vpn.ping}</span>
                  </div>
                  <div class="detail-row">
                    <span class="detail-label">–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:</span>
                    <span class="detail-value">${vpn.expiry}</span>
                  </div>
                </div>
                <button class="main-btn" onclick="copyConfig('${vpn.config}')">
                  <span class="btn-icon">üìã</span>
                  <span>–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥</span>
                </button>
              </div>
            `).join('')}
          </div>
        </div>
        
        <div class="bottom-nav">
          <div class="nav-item" onclick="showMainMenu()">
            <div class="nav-item-icon">üè†</div>
            <div class="nav-item-text">–ì–ª–∞–≤–Ω–∞—è</div>
          </div>
          <div class="nav-item active" onclick="showVPNs()">
            <div class="nav-item-icon">üîí</div>
            <div class="nav-item-text">VPN</div>
          </div>
          <div class="nav-item" onclick="showServers()">
            <div class="nav-item-icon">üåç</div>
            <div class="nav-item-text">–°–µ—Ä–≤–µ—Ä—ã</div>
          </div>
          <div class="nav-item" onclick="showTopup()">
            <div class="nav-item-icon">üí∞</div>
            <div class="nav-item-text">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</div>
          </div>
          <div class="nav-item" onclick="showProfile()">
            <div class="nav-item-icon">üë§</div>
            <div class="nav-item-text">–ü—Ä–æ—Ñ–∏–ª—å</div>
          </div>
        </div>
      </div>
    `;
    
    updateBottomNav('vpn');
  });
}

// –°–µ—Ä–≤–µ—Ä—ã
function showServers() {
  transitionToScreen('servers', () => {
    app.innerHTML = `
      <div class="app-container">
        <div class="screen active servers-screen">
          <div class="header">
            <div class="back-btn" onclick="showMainMenu()">‚Üê</div>
            <h2>–°–µ—Ä–≤–µ—Ä—ã</h2>
          </div>
          
          <div class="card">
            <h3 style="margin-bottom: 16px; color: var(--primary);">üåç –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä</h3>
            <div class="server-list">
              ${mockData.servers.map(server => `
                <div class="server-item ${selectedServer?.id === server.id ? 'selected' : ''}" 
                     onclick="selectServer(${server.id})">
                  <div class="server-info">
                    <div class="server-country">${server.country}</div>
                    <div class="server-city">${server.city}</div>
                  </div>
                  <div class="server-stats">
                    <div class="server-ping">${server.ping}</div>
                    <div class="server-load">${server.load}%</div>
                  </div>
                  <div class="server-status">
                    ${selectedServer?.id === server.id ? '‚úÖ' : '‚ö™'}
                  </div>
                </div>
              `).join('')}
            </div>
          </div>
          
          ${selectedServer ? `
            <div class="card">
              <h3 style="margin-bottom: 16px; color: var(--primary);">üöÄ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ</h3>
              <div class="connection-info">
                <div class="detail-row">
                  <span class="detail-label">–í—ã–±—Ä–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä:</span>
                  <span class="detail-value">${selectedServer.country} - ${selectedServer.city}</span>
                </div>
                <div class="detail-row">
                  <span class="detail-label">–ü–∏–Ω–≥:</span>
                  <span class="detail-value">${selectedServer.ping}</span>
                </div>
                <div class="detail-row">
                  <span class="detail-label">–ù–∞–≥—Ä—É–∑–∫–∞:</span>
                  <span class="detail-value">${selectedServer.load}%</span>
                </div>
              </div>
              <button class="main-btn" onclick="connectToServer()">
                <span class="btn-icon">üîó</span>
                <span>–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è</span>
              </button>
            </div>
          ` : ''}
        </div>
        
        <div class="bottom-nav">
          <div class="nav-item" onclick="showMainMenu()">
            <div class="nav-item-icon">üè†</div>
            <div class="nav-item-text">–ì–ª–∞–≤–Ω–∞—è</div>
          </div>
          <div class="nav-item" onclick="showVPNs()">
            <div class="nav-item-icon">üîí</div>
            <div class="nav-item-text">VPN</div>
          </div>
          <div class="nav-item active" onclick="showServers()">
            <div class="nav-item-icon">üåç</div>
            <div class="nav-item-text">–°–µ—Ä–≤–µ—Ä—ã</div>
          </div>
          <div class="nav-item" onclick="showTopup()">
            <div class="nav-item-icon">üí∞</div>
            <div class="nav-item-text">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</div>
          </div>
          <div class="nav-item" onclick="showProfile()">
            <div class="nav-item-icon">üë§</div>
            <div class="nav-item-text">–ü—Ä–æ—Ñ–∏–ª—å</div>
          </div>
        </div>
      </div>
    `;
    
    updateBottomNav('servers');
  });
}

// –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
function showTopup() {
  transitionToScreen('topup', () => {
    app.innerHTML = `
      <div class="app-container">
        <div class="screen active topup-screen">
          <div class="header">
            <div class="back-btn" onclick="showMainMenu()">‚Üê</div>
            <h2>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ</h2>
          </div>
          
          <div class="card">
            <div class="balance-display">
              <div class="balance-icon">üí∞</div>
              <div class="balance-info">
                <h3>–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å</h3>
                <div class="balance-amount">‚ÇΩ${mockData.profile.balance}</div>
              </div>
            </div>
          </div>
          
          <div class="card">
            <h3 style="margin-bottom: 16px; color: var(--primary);">üí≥ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è</h3>
            <div class="quick-amounts">
              <button class="amount-btn" onclick="selectAmount(100)">‚ÇΩ100</button>
              <button class="amount-btn" onclick="selectAmount(500)">‚ÇΩ500</button>
              <button class="amount-btn" onclick="selectAmount(1000)">‚ÇΩ1000</button>
              <button class="amount-btn" onclick="selectAmount(2000)">‚ÇΩ2000</button>
            </div>
            
            <div class="form-group">
              <label class="form-label">–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Å—É–º–º—É:</label>
              <input type="number" id="customAmount" class="form-input" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É" min="10" max="50000">
            </div>
            
            <button class="main-btn" onclick="processPayment()" style="width: 100%; margin-top: 16px;">
              <span class="btn-icon">üí≥</span>
              <span>–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å</span>
            </button>
          </div>
          
          <div class="card">
            <h3 style="margin-bottom: 16px; color: var(--primary);">üí° –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã</h3>
            <div class="payment-methods">
              <div class="payment-method">
                <div class="payment-icon">üí≥</div>
                <div class="payment-name">–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</div>
              </div>
              <div class="payment-method">
                <div class="payment-icon">üì±</div>
                <div class="payment-name">–°–ë–ü</div>
              </div>
              <div class="payment-method">
                <div class="payment-icon">üè¶</div>
                <div class="payment-name">–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥</div>
              </div>
            </div>
          </div>
        </div>
        
        <div class="bottom-nav">
          <div class="nav-item" onclick="showMainMenu()">
            <div class="nav-item-icon">üè†</div>
            <div class="nav-item-text">–ì–ª–∞–≤–Ω–∞—è</div>
          </div>
          <div class="nav-item" onclick="showVPNs()">
            <div class="nav-item-icon">üîí</div>
            <div class="nav-item-text">VPN</div>
          </div>
          <div class="nav-item" onclick="showServers()">
            <div class="nav-item-icon">üåç</div>
            <div class="nav-item-text">–°–µ—Ä–≤–µ—Ä—ã</div>
          </div>
          <div class="nav-item active" onclick="showTopup()">
            <div class="nav-item-icon">üí∞</div>
            <div class="nav-item-text">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</div>
          </div>
          <div class="nav-item" onclick="showProfile()">
            <div class="nav-item-icon">üë§</div>
            <div class="nav-item-text">–ü—Ä–æ—Ñ–∏–ª—å</div>
          </div>
        </div>
      </div>
    `;
    
    updateBottomNav('topup');
  });
}

// –§—É–Ω–∫—Ü–∏–∏
function selectServer(serverId) {
  selectedServer = mockData.servers.find(s => s.id === serverId);
  showServers();
  showToast(`–í—ã–±—Ä–∞–Ω —Å–µ—Ä–≤–µ—Ä: ${selectedServer.country}`, 'success');
}

function connectToServer() {
  if (!selectedServer) {
    showToast('–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä', 'error');
    return;
  }
  
  showToast('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...', 'info');
  
  setTimeout(() => {
    showToast(`–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ ${selectedServer.country}!`, 'success');
  }, 2000);
}

function selectAmount(amount) {
  // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
  document.querySelectorAll('.amount-btn').forEach(btn => {
    btn.classList.remove('active');
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–µ
  event.target.classList.add('active');
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
  const customAmountInput = document.getElementById('customAmount');
  if (customAmountInput) {
    customAmountInput.value = amount;
  }
  
  showToast(`–í—ã–±—Ä–∞–Ω–∞ —Å—É–º–º–∞: ‚ÇΩ${amount}`, 'info');
}

function processPayment() {
  const customAmountInput = document.getElementById('customAmount');
  const amount = customAmountInput ? customAmountInput.value : 0;
  
  if (!amount || amount < 10) {
    showToast('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –æ—Ç 10 —Ä—É–±–ª–µ–π', 'error');
    return;
  }
  
  showToast('–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞...', 'info');
  
  setTimeout(() => {
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
    mockData.profile.balance += parseInt(amount);
    showToast(`–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ‚ÇΩ${amount}!`, 'success');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ
    if (currentScreen === 'main') {
      showMainMenu();
    }
  }, 2000);
}

function copyConfig(config) {
  navigator.clipboard.writeText(config).then(() => {
    showToast('–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!', 'success');
  }).catch(() => {
    showToast('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è', 'error');
  });
}

function updateBottomNav(activeItem) {
  document.querySelectorAll('.nav-item').forEach(item => {
    item.classList.remove('active');
  });
  
  const activeNavItem = document.querySelector(`[onclick*="${activeItem}"]`);
  if (activeNavItem) {
    activeNavItem.classList.add('active');
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
  console.log('üì± DOM –∑–∞–≥—Ä—É–∂–µ–Ω');
  initApp();
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.showMainMenu = showMainMenu;
window.showProfile = showProfile;
window.showVPNs = showVPNs;
window.showServers = showServers;
window.showTopup = showTopup;
window.selectServer = selectServer;
window.connectToServer = connectToServer;
window.selectAmount = selectAmount;
window.processPayment = processPayment;
window.copyConfig = copyConfig;

console.log('‚úÖ EcliptVPN Mini App –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');